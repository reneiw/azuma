<?php

namespace Reneiw\Azuma;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use Reneiw\Azuma\Contracts\BasicAuthInterface;
use Reneiw\Azuma\Contracts\OAuthInterface;
use Reneiw\Azuma\Traits\BasicAuthTrait;
use Reneiw\Azuma\Traits\OAuthTrait;
use Reneiw\Azuma\Traits\VerificationTrait;
use Reneiw\Hiei\HTTPService;

class Shopify extends API implements BasicAuthInterface, OAuthInterface
{
    use BasicAuthTrait;
    use OAuthTrait;
    use VerificationTrait;

    public const HEADER_REST_API_LIMITS = 'HTTP_X_SHOPIFY_SHOP_API_CALL_LIMIT';
    public const HEADER_ACCESS_TOKEN = 'X-Shopify-Access-Token';

    public ?string $version;

    public function __construct(array $data = [])
    {
        parent::__construct($data);

        switch (true) {
            case !empty($data['token']):
                $this->setAccessTokenKey(self::HEADER_ACCESS_TOKEN);
                $this->setAccessTokenValue($data['token']);
                //$this->useOAuth();
                break;
            case (!empty($data['username']) && !empty($data['password'])):
                $this->setUsername($data['username']);
                $this->setPassword($data['password']);
                //$this->useBasicAuth();
                break;
            default:
                break;
        }
    }

    public function getAPIServer(): ?HTTPService
    {
        if (!$this->getAPIServer()) {
            $this->setAPIServer(new HTTPService($this->getClient()));
        }
        return parent::getAPIServer(); // TODO: Change the autogenerated stub
    }


    public function getVersion(): ?string
    {
        return !empty($this->version) ? $this->version : null;
    }

    public function setVersion(string $version): Shopify
    {
        $this->version = $version;
        return $this;
    }

    public function request(string $method, string $uri, array $params = null, array $headers = [], bool $sync = true)
    {
        return parent::request($method, $uri, $params, $headers, $sync); // TODO: Change the autogenerated stub
    }
}
